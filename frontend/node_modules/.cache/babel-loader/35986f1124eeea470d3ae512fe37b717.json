{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[input,setInput]=useState('');const[bitString,setBitString]=useState('');const[binaryString,setBinaryString]=useState('');const[hexString,setHexString]=useState('');const[receivedPRNs,setReceivedPRNs]=useState([]);const[error,setError]=useState('');const handleChange=event=>{setInput(event.target.value);};const handleSubmit=async event=>{event.preventDefault();try{const res=await fetch('http://localhost:5000/api/numbers',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({numbers:input})});if(!res.ok){throw new Error('Failed to fetch data from backend');}const data=await res.json();// Log the full response data to the console\nconsole.log(data);// Set the individual pieces of the response to display them\nsetBitString(data.bit_string);setBinaryString(data.binary_string);setHexString(data.hex_string);setReceivedPRNs(data.received_PRNs);// Optionally, set some success message or additional feedback\nsetError('');}catch(error){console.error('Error:',error);setError('Error: '+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Number Input\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleChange,placeholder:\"Enter numbers (1-210) separated by commas\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),bitString&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Bit String\"}),/*#__PURE__*/_jsx(\"p\",{children:bitString})]}),binaryString&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Binary String\"}),/*#__PURE__*/_jsx(\"p\",{children:binaryString})]}),hexString&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Hex String\"}),/*#__PURE__*/_jsx(\"p\",{children:hexString})]}),receivedPRNs.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Received PRNs\"}),/*#__PURE__*/_jsx(\"ul\",{children:receivedPRNs.map((prn,index)=>/*#__PURE__*/_jsx(\"li\",{children:prn},index))})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","input","setInput","bitString","setBitString","binaryString","setBinaryString","hexString","setHexString","receivedPRNs","setReceivedPRNs","error","setError","handleChange","event","target","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","numbers","ok","Error","data","json","console","log","bit_string","binary_string","hex_string","received_PRNs","message","children","onSubmit","type","onChange","placeholder","style","color","length","map","prn","index"],"sources":["C:/Users/satcom/Desktop/Message Encoding/fullstack-website/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [input, setInput] = useState('');\n    const [bitString, setBitString] = useState('');\n    const [binaryString, setBinaryString] = useState('');\n    const [hexString, setHexString] = useState('');\n    const [receivedPRNs, setReceivedPRNs] = useState([]);\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setInput(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const res = await fetch('http://localhost:5000/api/numbers', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ numbers: input }),\n            });\n\n            if (!res.ok) {\n                throw new Error('Failed to fetch data from backend');\n            }\n\n            const data = await res.json();\n\n            // Log the full response data to the console\n            console.log(data);\n\n            // Set the individual pieces of the response to display them\n            setBitString(data.bit_string);\n            setBinaryString(data.binary_string);\n            setHexString(data.hex_string);\n            setReceivedPRNs(data.received_PRNs);\n\n            // Optionally, set some success message or additional feedback\n            setError('');\n        } catch (error) {\n            console.error('Error:', error);\n            setError('Error: ' + error.message);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Number Input</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={handleChange}\n                    placeholder=\"Enter numbers (1-210) separated by commas\"\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n\n            {/* Display Error */}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            {/* Display the response data */}\n            {bitString && (\n                <div>\n                    <h2>Bit String</h2>\n                    <p>{bitString}</p>\n                </div>\n            )}\n            {binaryString && (\n                <div>\n                    <h2>Binary String</h2>\n                    <p>{binaryString}</p>\n                </div>\n            )}\n            {hexString && (\n                <div>\n                    <h2>Hex String</h2>\n                    <p>{hexString}</p>\n                </div>\n            )}\n            {receivedPRNs.length > 0 && (\n                <div>\n                    <h2>Received PRNs</h2>\n                    <ul>\n                        {receivedPRNs.map((prn, index) => (\n                            <li key={index}>{prn}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}