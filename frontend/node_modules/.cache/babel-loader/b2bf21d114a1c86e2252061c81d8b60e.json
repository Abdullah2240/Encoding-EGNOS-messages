{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[input,setInput]=useState('');const[response,setResponse]=useState('');const handleChange=event=>{setInput(event.target.value);};const handleSubmit=async event=>{event.preventDefault();try{const res=await fetch('http://localhost:5000/api/numbers',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({numbers:input})});const data=await res.json();setResponse(data.message);}catch(error){setResponse('Error: '+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Number Input\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleChange,placeholder:\"Enter numbers (1-210) separated by commas\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),response&&/*#__PURE__*/_jsx(\"p\",{children:response})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","input","setInput","response","setResponse","handleChange","event","target","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","numbers","data","json","message","error","children","onSubmit","type","onChange","placeholder"],"sources":["C:/Users/satcom/Desktop/Message Encoding/fullstack-website/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [input, setInput] = useState('');\n    const [response, setResponse] = useState('');\n\n    const handleChange = (event) => {\n        setInput(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const res = await fetch('http://localhost:5000/api/numbers', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ numbers: input }),\n            });\n            const data = await res.json();\n            setResponse(data.message);\n        } catch (error) {\n            setResponse('Error: ' + error.message);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Number Input</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={handleChange}\n                    placeholder=\"Enter numbers (1-210) separated by commas\"\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n            {response && <p>{response}</p>}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAU,YAAY,CAAIC,KAAK,EAAK,CAC5BJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,KAAK,EAAK,CAClCA,KAAK,CAACI,cAAc,CAAC,CAAC,CACtB,GAAI,CACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmC,CAAE,CACzDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEjB,KAAM,CAAC,CAC3C,CAAC,CAAC,CACF,KAAM,CAAAkB,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAC7BhB,WAAW,CAACe,IAAI,CAACE,OAAO,CAAC,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACZlB,WAAW,CAAC,SAAS,CAAGkB,KAAK,CAACD,OAAO,CAAC,CAC1C,CACJ,CAAC,CAED,mBACItB,KAAA,QAAAwB,QAAA,eACI1B,IAAA,OAAA0B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBxB,KAAA,SAAMyB,QAAQ,CAAEf,YAAa,CAAAc,QAAA,eACzB1B,IAAA,UACI4B,IAAI,CAAC,MAAM,CACXjB,KAAK,CAAEP,KAAM,CACbyB,QAAQ,CAAErB,YAAa,CACvBsB,WAAW,CAAC,2CAA2C,CAC1D,CAAC,cACF9B,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EACnC,CAAC,CACNpB,QAAQ,eAAIN,IAAA,MAAA0B,QAAA,CAAIpB,QAAQ,CAAI,CAAC,EAC7B,CAAC,CAEd,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}