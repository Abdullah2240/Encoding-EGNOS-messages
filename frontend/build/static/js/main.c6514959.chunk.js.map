{"version":3,"sources":["App.js","index.js"],"names":["App","input","setInput","useState","iodp","setIodp","bitString","setBitString","hexString","setHexString","receivedPRNs","setReceivedPRNs","error","setError","_jsx","className","children","_jsxs","onSubmit","async","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","numbers","ok","errorData","json","Error","message","data","console","log","bit_string","hex_string","received_PRNs","type","value","onChange","target","placeholder","length","map","prn","index","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"+KAkHeA,MAhHf,WACI,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAMC,GAAWF,mBAAS,KAC1BG,EAAWC,GAAgBJ,mBAAS,KACpCK,EAAWC,GAAgBN,mBAAS,KACpCO,EAAcC,GAAmBR,mBAAS,KAC1CS,EAAOC,GAAYV,mBAAS,IA6CnC,OACIW,cAAA,OAAKC,UAAU,wEAAuEC,SAClFC,eAAA,OAAKF,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,MAAIC,UAAU,mBAAkBC,SAAC,iBACjCC,eAAA,QAAMC,SAvCGC,UACjBC,EAAMC,iBACN,IACI,MAAMC,QAAYC,MAAM,eAAgB,CACpCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,QAAS5B,MAGpC,IAAKqB,EAAIQ,GAAI,CAET,MAAMC,QAAkBT,EAAIU,OAC5B,MAAM,IAAIC,MAAMF,EAAUG,SAAW,uBACzC,CAEA,MAAMC,QAAab,EAAIU,OAGvBI,QAAQC,IAAIF,GAGZ5B,EAAa4B,EAAKG,YAClB7B,EAAa0B,EAAKI,YAClB5B,EAAgBwB,EAAKK,eAGrB3B,EAAS,GACb,CAAE,MAAOD,GACLwB,QAAQxB,MAAM,SAAUA,GACxBC,EAAS,UAAYD,EAAMsB,QAC/B,GAOqClB,SAAA,CACzBC,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,SACI2B,KAAK,OACLC,MAAOzC,EACP0C,SApDGvB,IACvBlB,EAASkB,EAAMwB,OAAOF,QAoDF3B,UAAU,eACV8B,YAAY,8CAEhB/B,cAAA,SACI2B,KAAK,OACLC,MAAOtC,EACPuC,SAvDEvB,IACtBf,EAAQe,EAAMwB,OAAOF,QAuDD3B,UAAU,eACV8B,YAAY,iDAGpB/B,cAAA,UAAQ2B,KAAK,SAAS1B,UAAU,wBAAuBC,SAAC,cAI3DJ,GAASE,cAAA,KAAGC,UAAU,mBAAkBC,SAAEJ,IAG1CN,GACGW,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,cAAA,OAAKC,UAAU,wBAAuBC,SAClCF,cAAA,KAAGC,UAAU,aAAYC,SAAEV,SAItCE,GACGS,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,cAAA,OAAKC,UAAU,wBAAuBC,SAClCF,cAAA,KAAGC,UAAU,aAAYC,SAAER,SAItCE,EAAaoC,OAAS,GACnB7B,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC5BF,cAAA,MAAIC,UAAU,aAAYC,SACrBN,EAAaqC,IAAI,CAACC,EAAKC,IACpBnC,cAAA,MAAgBC,UAAU,kBAAiBC,SACtCgC,GADIC,aAUzC,E,KC3GAC,IAASC,OACPrC,cAACsC,IAAMC,WAAU,CAAArC,SACfF,cAACd,EAAG,MAENsD,SAASC,eAAe,Q","file":"static/js/main.c6514959.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [input, setInput] = useState('');\n    const [iodp, setIodp] = useState('');\n    const [bitString, setBitString] = useState('');\n    const [hexString, setHexString] = useState('');\n    const [receivedPRNs, setReceivedPRNs] = useState([]);\n    const [error, setError] = useState('');\n\n    const handleInputChange = (event) => {\n        setInput(event.target.value);\n    };\n\n    const handleIodpChange = (event) => {\n        setIodp(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const res = await fetch('/api/numbers', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ numbers: input }),\n            });\n\n            if (!res.ok) {\n                // Extract the error response from the body and throw it\n                const errorData = await res.json();\n                throw new Error(errorData.message || 'Something went wrong');\n            }\n\n            const data = await res.json();\n\n            // Log the full response data to the console\n            console.log(data);\n\n            // Set the individual pieces of the response to display them\n            setBitString(data.bit_string);\n            setHexString(data.hex_string);\n            setReceivedPRNs(data.received_PRNs);\n\n            // Optionally, set some success message or additional feedback\n            setError('');\n        } catch (error) {\n            console.error('Error:', error);\n            setError('Error: ' + error.message);\n        }\n    };\n\n    return (\n        <div className=\"container d-flex justify-content-center align-items-center min-vh-100\">\n            <div className=\"card p-4 shadow-lg w-50\">\n                <h1 className=\"text-center mb-4\">Number Input</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"mb-3\">\n                        <input\n                            type=\"text\"\n                            value={input}\n                            onChange={handleInputChange}\n                            className=\"form-control\"\n                            placeholder=\"Enter numbers (1-210) separated by commas\"\n                        />\n                        <input\n                            type=\"text\"\n                            value={iodp}\n                            onChange={handleIodpChange}\n                            className=\"form-control\"\n                            placeholder=\"Enter numbers (1-210) separated by commas\"\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">Submit</button>\n                </form>\n\n                {/* Display Error */}\n                {error && <p className=\"mt-4 text-danger\">{error}</p>}\n\n                {/* Display the response data */}\n                {bitString && (\n                    <div className=\"mt-6\">\n                        <h4 className=\"text-center\">Bit String</h4>\n                        <div className=\"alert alert-secondary\">\n                            <p className=\"text-break\">{bitString}</p>\n                        </div>\n                    </div>\n                )}\n                {hexString && (\n                    <div className=\"mt-6\">\n                        <h4 className=\"text-center\">Hex String</h4>\n                        <div className=\"alert alert-secondary\">\n                            <p className=\"text-break\">{hexString}</p>\n                        </div>\n                    </div>\n                )}\n                {receivedPRNs.length > 0 && (\n                    <div className=\"mt-6\">\n                        <h4 className=\"text-center\">Received PRNs</h4>\n                        <ul className=\"list-group\">\n                            {receivedPRNs.map((prn, index) => (\n                                <li key={index} className=\"list-group-item\">\n                                    {prn}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}