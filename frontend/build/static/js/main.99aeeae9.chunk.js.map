{"version":3,"sources":["App.js","index.js"],"names":["App","input","setInput","useState","bitString","setBitString","binaryString","setBinaryString","hexString","setHexString","receivedPRNs","setReceivedPRNs","error","setError","_jsx","className","children","_jsxs","onSubmit","async","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","numbers","ok","errorData","json","Error","data","console","log","bit_string","binary_string","hex_string","received_PRNs","message","type","value","onChange","target","placeholder","length","map","prn","index","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"+KAyGeA,MAvGf,WACI,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAWC,GAAgBF,mBAAS,KACpCG,EAAcC,GAAmBJ,mBAAS,KAC1CK,EAAWC,GAAgBN,mBAAS,KACpCO,EAAcC,GAAmBR,mBAAS,KAC1CS,EAAOC,GAAYV,mBAAS,IA2CnC,OACIW,cAAA,OAAKC,UAAU,wEAAuEC,SAClFC,eAAA,OAAKF,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,MAAIC,UAAU,mBAAkBC,SAAC,iBACjCC,eAAA,QAAMC,SAzCGC,UACjBC,EAAMC,iBACN,IACI,MAAMC,QAAYC,MAAM,oCAAqC,CACzDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,QAAS5B,MAGpC,IAAKqB,EAAIQ,GAAI,CACT,MAAMC,QAAkBT,EAAIU,OAC5B,MAAM,IAAIC,MAAMF,EAAiB,MACrC,CAEA,MAAMG,QAAaZ,EAAIU,OAGvBG,QAAQC,IAAIF,GAGZ7B,EAAa6B,EAAKG,YAClB9B,EAAgB2B,EAAKI,eACrB7B,EAAayB,EAAKK,YAClB5B,EAAgBuB,EAAKM,eAGrB3B,EAAS,GACb,CACA,MAAOD,GACHuB,QAAQvB,MAAM,SAAUA,GACxBC,EAAS,UAAYD,EAAM6B,QAC/B,GAQqCzB,SAAA,CACzBF,cAAA,OAAKC,UAAU,OAAMC,SACjBF,cAAA,SACI4B,KAAK,OACLC,MAAO1C,EACP2C,SAlDFxB,IAClBlB,EAASkB,EAAMyB,OAAOF,QAkDF5B,UAAU,eACV+B,YAAY,gDAGpBhC,cAAA,UAAQ4B,KAAK,SAAS3B,UAAU,wBAAuBC,SAAC,cAI3DJ,GAASE,cAAA,KAAGC,UAAU,mBAAkBC,SAAEJ,IAG1CR,GACGa,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,cAAA,OAAKC,UAAU,wBAAuBC,SAClCF,cAAA,KAAGC,UAAU,aAAYC,SAAEZ,SAItCI,GACGS,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,cAAA,OAAKC,UAAU,wBAAuBC,SAClCF,cAAA,KAAGC,UAAU,aAAYC,SAAER,SAItCE,EAAaqC,OAAS,GACnB9B,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC5BF,cAAA,MAAIC,UAAU,aAAYC,SACrBN,EAAasC,IAAI,CAACC,EAAKC,IACpBpC,cAAA,MAAgBC,UAAU,kBAAiBC,SACtCiC,GADIC,aAUzC,E,KClGAC,IAASC,OACPtC,cAACuC,IAAMC,WAAU,CAAAtC,SACfF,cAACd,EAAG,MAENuD,SAASC,eAAe,Q","file":"static/js/main.99aeeae9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n    const [input, setInput] = useState('');\r\n    const [bitString, setBitString] = useState('');\r\n    const [binaryString, setBinaryString] = useState('');\r\n    const [hexString, setHexString] = useState('');\r\n    const [receivedPRNs, setReceivedPRNs] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const res = await fetch('http://localhost:5000/api/numbers', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ numbers: input }),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                throw new Error(errorData[\"error\"]);\r\n            }\r\n\r\n            const data = await res.json();\r\n\r\n            // Log the full response data to the console\r\n            console.log(data);\r\n\r\n            // Set the individual pieces of the response to display them\r\n            setBitString(data.bit_string);\r\n            setBinaryString(data.binary_string);\r\n            setHexString(data.hex_string);\r\n            setReceivedPRNs(data.received_PRNs);\r\n\r\n            // Clear any existing error\r\n            setError('');\r\n        } \r\n        catch (error) {\r\n            console.error('Error:', error);\r\n            setError('Error: ' + error.message);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center min-vh-100\">\r\n            <div className=\"card p-4 shadow-lg w-50\">\r\n                <h1 className=\"text-center mb-4\">Number Input</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter numbers (1-210) separated by commas\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">Submit</button>\r\n                </form>\r\n\r\n                {/* Display Error */}\r\n                {error && <p className=\"mt-4 text-danger\">{error}</p>}\r\n\r\n                {/* Display the response data */}\r\n                {bitString && (\r\n                    <div className=\"mt-6\">\r\n                        <h4 className=\"text-center\">Bit String</h4>\r\n                        <div className=\"alert alert-secondary\">\r\n                            <p className=\"text-break\">{bitString}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {hexString && (\r\n                    <div className=\"mt-6\">\r\n                        <h4 className=\"text-center\">Hex String</h4>\r\n                        <div className=\"alert alert-secondary\">\r\n                            <p className=\"text-break\">{hexString}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {receivedPRNs.length > 0 && (\r\n                    <div className=\"mt-6\">\r\n                        <h4 className=\"text-center\">Received PRNs</h4>\r\n                        <ul className=\"list-group\">\r\n                            {receivedPRNs.map((prn, index) => (\r\n                                <li key={index} className=\"list-group-item\">\r\n                                    {prn}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}